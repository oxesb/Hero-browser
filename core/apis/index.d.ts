import { IApiSpec } from '@ulixee/net/interfaces/IApiHandlers';
import ICoreRequestPayload from '@ulixee/net/interfaces/ICoreRequestPayload';
import ICoreResponsePayload from '@ulixee/net/interfaces/ICoreResponsePayload';
import sessionCommandsApi from './Session.commands';
import sessionDomChangesApi from './Session.domChanges';
import sessionInteractionsApi from './Session.interactions';
import sessionResourceApi from './Session.resource';
import sessionResourcesApi from './Session.resources';
import sessionTabsApi from './Session.tabs';
import sessionTicksApi from './Session.ticks';
import sessionFindApi from './Session.find';
import sessionsFindRelatedApi from './Sessions.findRelated';
import sessionsFindWithErrorsApi from './Sessions.findWithErrors';
import sessionsSearchApi from './Sessions.search';
declare const heroApiHandlers: {
    'Session.commands': typeof sessionCommandsApi;
    'Session.domChanges': typeof sessionDomChangesApi;
    'Session.interactions': typeof sessionInteractionsApi;
    'Session.find': typeof sessionFindApi;
    'Session.resource': typeof sessionResourceApi;
    'Session.resources': typeof sessionResourcesApi;
    'Session.tabs': typeof sessionTabsApi;
    'Session.ticks': typeof sessionTicksApi;
    'Sessions.findRelated': typeof sessionsFindRelatedApi;
    'Sessions.findWithErrors': typeof sessionsFindWithErrorsApi;
    'Sessions.search': typeof sessionsSearchApi;
};
declare type IHeroCoreApiHandlers = typeof heroApiHandlers;
declare type IHeroCoreApiSpec = IApiSpec<IHeroCoreApiHandlers>;
declare type IHeroApiRequest<T extends keyof IHeroCoreApiHandlers> = ICoreRequestPayload<IHeroCoreApiHandlers, T>;
declare type IHeroApiResponse<T extends keyof IHeroCoreApiHandlers> = ICoreResponsePayload<IHeroCoreApiHandlers, T>;
export { heroApiHandlers, IHeroCoreApiSpec, IHeroCoreApiHandlers, IHeroApiResponse, IHeroApiRequest };
